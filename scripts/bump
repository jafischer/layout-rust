#!/bin/bash


main() {
  set_globals
  parse_options "$@"

  cargo --list | grep set-version > /dev/null || {
    log "Installing cargo-edit"
    cargo install cargo-edit
  }
  cargo set-version --bump "$BUMP_FIELD"

  if [[ $COMMIT == "yes" ]]; then
    local extra_files version

    version=$(grep '^version' Cargo.toml | awk -F'"' '{print $2}')

    # Include Cargo.lock if it's not ignored.
    grep Cargo.lock "$SCRIPT_DIR/../.gitignore" >& /dev/null || extra_files=Cargo.lock

    # Include version.yaml if it exists.
    if [[ -e version.yaml ]]; then
      extra_files="$extra_files version.yaml"
      echo "version: $version" > version.yaml
    fi
    # shellcheck disable=SC2046
    # shellcheck disable=SC2086
    git commit $(find . -name Cargo.toml) $extra_files -m "Bump $BUMP_FIELD to $version"
  fi
}

set_globals() {
  SCRIPT_DIR=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)

  # shellcheck disable=SC2164
  cd "${SCRIPT_DIR}/.."

  if [[ -e "${SCRIPT_DIR}/.default_bump_field" ]]; then
    BUMP_FIELD="$(cat "${SCRIPT_DIR}/.default_bump_field")"
  elif [[ -e version.yaml ]]; then
    # Since Jenkins changes the version in version.yaml to major.minor.timestamp, set the
    # default field to minor.
    BUMP_FIELD="minor"
  else
    BUMP_FIELD="patch"
  fi

  # Define some colors:
  RED='\x1b[1;31m'
  YELLOW='\x1b[1;33m'
  CYAN='\x1b[1;36m'
  NC='\x1b[0m' # No Color
}

parse_options() {
  while [[ -n ${1} ]]; do
    case ${1} in
      -c | --commit)
        COMMIT="yes"
        ;;
      --maj | --major)
        BUMP_FIELD="major"
        ;;
      --min | --minor)
        BUMP_FIELD="minor"
        ;;
      --pat | --patch)
        BUMP_FIELD="patch"
        ;;
      *)
        usage
        ;;
    esac

    shift
  done
}

usage() {
  log "Increments the version in Cargo.toml"
  log ""
  log "Usage:"
  log "${YELLOW}$(basename "$0") [OPTIONS]"
  log ""
  log "Options:"
  log "${YELLOW}-c, --commit     Commit the updated file(s)"
  log "${YELLOW}                 (Cargo.toml, Cargo.lock if it's not git-ignored, and version.yaml if it exists)"
  log "${YELLOW}--maj, --major   Bump the major field (default is $BUMP_FIELD)"
  log "${YELLOW}--min, --minor   Bump the minor field (default is $BUMP_FIELD)"
  log "${YELLOW}--pat, --patch   Bump the patch field (default is $BUMP_FIELD)"
  log ""
  log "Note: to change the default field, put the field name in ${SCRIPT_DIR}/.default_bump_field"
  log ""

  exit
}

log() {
  echo -e "${CYAN}$*$NC" 1>&2
}

log_heading() {
  local heading="$*" ruler
  ruler=$(echo -n "$heading" | sed -e 's/./=/g')

  echo -e "${CYAN}+=${ruler}=+$NC" 1>&2
  echo -e "${CYAN}| $* |$NC" 1>&2
  echo -e "${CYAN}+=${ruler}=+$NC" 1>&2
}

log_error() {
  echo -e "${RED}$*$NC" 1>&2
}

die() {
  log_error "ERROR: $*"
  exit 1
}

do_or_die() {
  "$@" || die "Command failed: '$*'"
}

main "$@"
